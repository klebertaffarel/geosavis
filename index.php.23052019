<?php
//echo "<br>incluindo autoload: ";
//echo dirname(__FILE__).'/includes/autoload.php';
require_once(dirname(__FILE__).'/includes/autoload.php');
//echo "<br>autoload incluido";
error_reporting(0);
//ini_set('display_errors', E_ALL);

$DEBUG = false;

$svsZabLib = new SvsZabbixLib();
$svsZabLib->setDebug($DEBUG);
if ($DEBUG) echo "<pre>";
//Recupera o Mapa
//$mapinfo = $svsZabLib->getSysmapByName('Mapa_Base_GMaps_0');
$mapinfo = $svsZabLib->getSysmapByName('Infovia');

if ($DEBUG) print_r($mapinfo);

//Recupera os HostGroups
if ($DEBUG) echo "\n<br>host_groups:";
$hostGroups = $svsZabLib->getSysmapHostsGroups($mapinfo['sysmapid']);
if ($DEBUG) print_r($hostGroups);

//Recupera os Links
if ($DEBUG) echo "\n<br>links:";
$ar_links = $svsZabLib->getSysmapLinks($mapinfo['sysmapid']);

if ($DEBUG) print_r($ar_links);

if ($DEBUG) echo "</pre>";


?>

<html>
<head>

	<link rel="stylesheet" href="leaflet/leaflet.css" />
	<script src="leaflet/leaflet.js"></script>


	<script src="leaflet/Label.js"></script>
	<script src="leaflet/BaseMarkerMethods.js"></script>
	<script src="leaflet/Marker.Label.js"></script>
	<script src="leaflet/CircleMarker.Label.js"></script>
	<script src="leaflet/Path.Label.js"></script>
	<script src="leaflet/Map.Label.js"></script>
	<script src="leaflet/FeatureGroup.Label.js"></script>

	<link rel="SHORTCUT ICON" HREF="leaflet/wea/owm.ico">
	<link rel="stylesheet" type="text/css" href="leaflet/wea/leaflet-openweathermap.css" />
	<script type="text/javascript" src="leaflet/wea/leaflet-openweathermap.js"></script>

	<link rel="stylesheet" type="text/css" href="leaflet/wea/map.css" />
	<script src="leaflet/wea/Permalink.js"></script>
	<script src="leaflet/wea/Permalink.Layer.js"></script>
	<script src="leaflet/wea/Permalink.Overlay.js"></script>
	<link rel="stylesheet" type="text/css" href="leaflet/wea/leaflet-languageselector.css" />
	<script src="leaflet/wea/leaflet-languageselector.js"></script>
	<script src="leaflet/wea/map_i18n.js"></script>
	<script src="leaflet/wea/map.js"></script>


	<script src="leaflet/kml/KML.js"></script>

   
<script language="javascript">


	function addMarkersToMap(map) {


	var myIcon = L.icon({
		iconUrl: 'images/torre.png',
		iconSize: [27, 37],
		iconAnchor: [10, 10],
		labelAnchor: [6, 0] // as I want the label to appear 2px past the icon (10 + 2 - 6)
	});

	<?php
	//---GROUP HOSTS----------------------------------------------------------------
                $i = 0;
                $aux_grouphosts_by_selementid = [];
                while ($i < count($hostGroups)){
                        //Salva a posicao para facilitar a criacao das linhas
                        $aux_grouphosts_by_selementid[$hostGroups[$i]['selementid']] = $hostGroups[$i];
                //Recupera informacoes de Sub-mapas
                echo "/*";
                $mapaDetalhado = $svsZabLib->getSysmapByName($hostGroups[$i]['name']);
//		$link_banda = $svsZabLib->getSysmapLinksBanda($hostGroups[$i]['groupid']);

		if ($DEBUG) print_r($link_banda);
		if ($DEBUG) print_r($link_banda[0]['banda']);

                echo "*/";
//		if (($link_banda[0]['banda']!='')){
//			$banda="<span class=\"leaflet-label-link\"> Uso Banda ".$link_banda[0]['name'].":</span><span class=\"leaflet-label-link\">.$link_banda[0]['banda'];
//			$banda="<span style=\"color:blue;\"> - Banda Util: ".$link_banda[0]['banda']."</span>";
//			$banda="<span class=\"leaflet-label-link\">".$link_banda[0]['name']." :<span style=\"color:blue;\"> ".$link_banda[0]['banda']." Mbps</span>";
		
//		} else {
//			$banda='';
//		};

//                ?>
			

			var marker<?=$hostGroups[$i]['groupid']?> = new L.LatLng(<?=$hostGroups[$i]['lat']?>,<?=$hostGroups[$i]['lon']?>);
			L.marker([<?=$hostGroups[$i]['lat']?>,<?=$hostGroups[$i]['lon']?>], {icon: myIcon}).bindLabel('<?=$hostGroups[$i]['label'].$banda?>', { noHide: true}).addTo(map);


               <?php
                $i++;
                }
                   print_r($aux_grouphosts_byid);
                ?>

        }

	function addPolylineToMap(map) {

		<?php
		$i=0;
			while ($i < count($ar_links)){
			// print_r($ar_links[$i]['selementid1']);
		?>
			var polylinePoints = [new L.LatLng(<?=$aux_grouphosts_by_selementid[$ar_links[$i]['selementid1']]['lat']?>,
				<?=$aux_grouphosts_by_selementid[$ar_links[$i]['selementid1']]['lon']?>),
				new L.LatLng(<?=$aux_grouphosts_by_selementid[$ar_links[$i]['selementid2']]['lat']?>,
				<?=$aux_grouphosts_by_selementid[$ar_links[$i]['selementid2']]['lon']?>)
			];
			var polylineOptions = {
				color: '#<?=$ar_links[$i]['cor_link']?>',
				weight: 3.9,
				opacity: 0.9
			};
			var polyliner<?=$hostGroups[$i]['groupid']?> = new L.Polyline(polylinePoints, polylineOptions);
			map.addLayer(polyliner<?=$hostGroups[$i]['groupid']?>);
		<?php
		$i++;
		}
		?>
			// zoom the map to the polyline
			//map.fitBounds(polyline.getBounds());
	}

	function init() {

	
		var openWeatherMapKey = '46060fbef173cdd54a18b2fcf65bd884';
		var clouds = L.OWM.clouds({showLegend: true, opacity: 0.8, appId: '46060fbef173cdd54a18b2fcf65bd884'});
		var rain = L.OWM.rain({showLegend: true, opacity: 0.8, appId: '46060fbef173cdd54a18b2fcf65bd884'});
		var precipitation = L.OWM.precipitation({showLegend: true, opacity: 0.8, appId: '46060fbef173cdd54a18b2fcf65bd884'});
		var precipitationClassic = L.OWM.precipitationClassic({showLegend: true, opacity: 0.8, appId: '46060fbef173cdd54a18b2fcf65bd884'});
		var temperature = L.OWM.temperature({showLegend: true, opacity: 0.8, appId: '46060fbef173cdd54a18b2fcf65bd884'});
		var city = L.OWM.current({intervall: 15, lang: 'pt_br', appId: '46060fbef173cdd54a18b2fcf65bd884'});

		// Initialise base map layers
		var osmStandard =
			L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png?appid=46060fbef173cdd54a18b2fcf65bd884', {
			attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
			maxZoom: 19
	          })

		var mapbox = 
			L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoia3RhZmZhcmVsIiwiYSI6ImNqc2F2bnpwMDAzb3czeXBlZmNoeGkwbDIifQ.h4kqbBmu8ApJXfnBETZnbQ', {
			attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
			maxZoom: 18,
			id: 'mapbox.streets',
			accessToken: 'pk.eyJ1Ijoia2xlYmVydGFmZmFyZWwiLCJhIjoiY2puMHFoeDNuNHNnNjNxbnl1d3A0MDlmaSJ9.FliRQ8BNbB5NGpgtH9lkpQ'
		})
		var mapout =
                        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoia3RhZmZhcmVsIiwiYSI6ImNqc2F2bnpwMDAzb3czeXBlZmNoeGkwbDIifQ.h4kqbBmu8ApJXfnBETZnbQ', {
                        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                        maxZoom: 18,
                        id: 'mapbox.outdoors',
                        accessToken: 'pk.eyJ1Ijoia2xlYmVydGFmZmFyZWwiLCJhIjoiY2puMHFoeDNuNHNnNjNxbnl1d3A0MDlmaSJ9.FliRQ8BNbB5NGpgtH9lkpQ'
                })


		var wikimedia =
			L.tileLayer('https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors. Base map: <a href="https://www.mediawiki.org/wiki/Maps#Production_maps_cluster">wikimedia maps</a>',
			maxZoom: 18
		})

		var OpenMapSurfer_Roads = 
			L.tileLayer('https://korona.geog.uni-heidelberg.de/tiles/roads/x={x}&y={y}&z={z}', {
			maxZoom: 20,
			attribution: 'Imagery from <a href="http://giscience.uni-hd.de/">GIScience Research Group @ University of Heidelberg</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
		});
		


		// Initialise overlay layers
		var hiking =
			L.tileLayer('//tile.lonvia.de/hiking/{z}/{x}/{y}.png', {
			maxZoom: 18
		})

		var cycling =
			L.tileLayer('//tile.waymarkedtrails.org/cycling/{z}/{x}/{y}.png', {
			maxZoom: 18
		})


		var srdt = new L.KML("leaflet/kml/coberturasrdt.kml", {async: true});
		var sisfron = new L.KML("leaflet/kml/sisfronfase1.kml", {async: true});

		// Name the layers
		var baseMaps = {
	            'OpenStreetMap standard': osmStandard,
		    'Mapbox': mapbox,
		    'Mapbox Out': mapout,
        	    'Wikimedia maps': wikimedia,
	            'Open Roads': OpenMapSurfer_Roads

	        };

		var overlayMaps = {
			'Nuvens': clouds,
			'Chuva': rain,
			'Precipitação': precipitation,
			'Precipitação Legendada': precipitationClassic,
			'Temperatura': temperature,
			'Clima': city,
			'SRDT': srdt,
			'Sisfron Fase 1': sisfron
		};



		var map = L.map('map', {
			center: [-23.10,-55.40],
			zoom: 9,
			layers: [city, sisfron]
		});



		// Add our preferred default layer choice directly to the map
                map.addLayer(mapout);


        	// Add the layer picker control
	        var layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);
		L.control.scale().addTo(map);
	
	        map.attributionControl.setPrefix('Powered by Leaflet'); // Don't show the 'Powered by Leaflet' text. Attribution overload

	
		map.attributionControl.setPrefix(''); // Don't show the 'Powered by Leaflet' text.

		addMarkersToMap(map);        
		addPolylineToMap(map);

		//Para recarregar automaticamente
		setTimeout(function(){
			map.setView([-20.95,-55.40]);
			console.log("setTimeout de 4 segundo - No centro depois vai para o mapa total");
		},10000);


		setTimeout(function(){
			map.setView([-22.00,-55.40],8);		
//                        map.setZoom(9);
                         console.log("setTimeOut de 20 segundos - Mapa Total e depois vai para o sul");
                }, 20000);

                setTimeout(function(){
                        location.reload();
			console.log("setTimeout de 1 minuto e depois  vai para Sul");
                }, 60000);


      }

   </script>
</head>


<body onLoad="javascript:init();">
   <div id="map" style="height: 940px"></div>
   
</body>                                                                                                                          
</html>
